// Code generated by protoc-gen-go. DO NOT EDIT.
// source: result.proto

package releases

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StatusCode int32

const (
	StatusCode_UNSPECIFIED     StatusCode = 0
	StatusCode_SUCCESS         StatusCode = 1
	StatusCode_PARTIAL_SUCCESS StatusCode = 2
	StatusCode_FAILURE         StatusCode = 3
)

var StatusCode_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "SUCCESS",
	2: "PARTIAL_SUCCESS",
	3: "FAILURE",
}

var StatusCode_value = map[string]int32{
	"UNSPECIFIED":     0,
	"SUCCESS":         1,
	"PARTIAL_SUCCESS": 2,
	"FAILURE":         3,
}

func (x StatusCode) String() string {
	return proto.EnumName(StatusCode_name, int32(x))
}

func (StatusCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{0}
}

type DescriptionCode int32

const (
	DescriptionCode_NOT_SPECIFIED       DescriptionCode = 0
	DescriptionCode_INVALID_ARGUMENT    DescriptionCode = 1
	DescriptionCode_SERVICE_UNAVAILABLE DescriptionCode = 2
	DescriptionCode_ALREADY_EXIST       DescriptionCode = 3
	DescriptionCode_NOT_FOUND           DescriptionCode = 4
	DescriptionCode_UNAUTHORIZED_ACCESS DescriptionCode = 5
	DescriptionCode_INVALID_OPERATION   DescriptionCode = 6
	DescriptionCode_NOT_SUPPORTED       DescriptionCode = 7
	DescriptionCode_INTERNAL_ERROR      DescriptionCode = 8
	// UM Specific codes
	DescriptionCode_INVALID_USERNAME        DescriptionCode = 10
	DescriptionCode_CAPTCHA_UNAUTHORIZED    DescriptionCode = 12
	DescriptionCode_CREATE_USER_FAILED      DescriptionCode = 13
	DescriptionCode_LOGIN_FAILED            DescriptionCode = 14
	DescriptionCode_OWNER_DOES_NOT_EXIST    DescriptionCode = 15
	DescriptionCode_CANNOT_DELETE_USER      DescriptionCode = 16
	DescriptionCode_TOKEN_INVALID           DescriptionCode = 17
	DescriptionCode_RESET_PASSWORD_FAILED   DescriptionCode = 18
	DescriptionCode_ASSIGN_ROLE_USER_FAILED DescriptionCode = 19
	DescriptionCode_CANNOT_DELETE_ACCOUNT   DescriptionCode = 20
	DescriptionCode_NOT_FOUND_IN_FREEIPA    DescriptionCode = 21
	DescriptionCode_FOUND_IN_FREEIPA        DescriptionCode = 22
	// PNM specific error codes. Reserved from 41 to 69
	DescriptionCode_DELETE_IN_PROGRESS        DescriptionCode = 41
	DescriptionCode_FACTORY_RESET_IN_PROGRESS DescriptionCode = 42
	DescriptionCode_CREATE_IN_PROGRESS        DescriptionCode = 43
	DescriptionCode_PNMID_NOT_FOUND           DescriptionCode = 44
	DescriptionCode_HW_INACTIVE               DescriptionCode = 45
	// NDC (Network Device Configurator) specific error codes. Reserved from 70..99
	// Authentication failed to Network Device (either the username, ssh password, or ssh key (whichever is used) is incorrect).
	DescriptionCode_AUTHENTICATION_FAILED_TO_NETWORK_DEVICE DescriptionCode = 70
	// Non-authentication related problems reported by communicating with Network Devices,
	// e.g. trying to commit a configuration with syntax error.
	DescriptionCode_ERROR_FROM_NETWORK_DEVICE DescriptionCode = 71
	// If there is no confirmed commit in progress, but trying to do a confirming commit.
	DescriptionCode_CONFIRMING_COMMIT_NOT_POSSIBLE DescriptionCode = 72
	// If there is no confirmed commit in progress, but trying to do a cancel commit.
	DescriptionCode_CANCEL_COMMIT_NOT_POSSIBLE DescriptionCode = 73
	// This error is returned when an operation is already in progress e.g. the Network Device is already being configured,
	// and a concurrent request arrives.
	DescriptionCode_ERROR_ANOTHER_OPERATION_IS_IN_PROGRESS DescriptionCode = 74
	// Operation has started, but still in progress (for Query<...> rpc-s)
	DescriptionCode_OPERATION_IN_PROGRESS DescriptionCode = 75
	// A Network Device (e.g. Juniper SRX) got a configuration which was semantically faulty and cut the Edge network connectivity
	// from the Internet/DC, and therefore this configuration needed to be canceled (rolled back to the previous, working configuration).
	DescriptionCode_ERROR_FAULTY_NETWORK_DEVICE_CONFIG_CANCELED DescriptionCode = 76
	// ENC (Edge Network Configurator) specific error codes. Reserved from 100..119
	// ENC did not recieve push notification in an operation specific timeout.
	DescriptionCode_OPERATION_TIMED_OUT DescriptionCode = 100
	//License Management .. Reserved from 120 to 140
	DescriptionCode_LICENSE_EXPIRED DescriptionCode = 120
	//NHGC specific error codes. Reserved from 141..160
	DescriptionCode_MANUAL_CONFIG DescriptionCode = 141
	//MCN specific error case
	DescriptionCode_MCN_NOT_REACHABLE DescriptionCode = 161
)

var DescriptionCode_name = map[int32]string{
	0:   "NOT_SPECIFIED",
	1:   "INVALID_ARGUMENT",
	2:   "SERVICE_UNAVAILABLE",
	3:   "ALREADY_EXIST",
	4:   "NOT_FOUND",
	5:   "UNAUTHORIZED_ACCESS",
	6:   "INVALID_OPERATION",
	7:   "NOT_SUPPORTED",
	8:   "INTERNAL_ERROR",
	10:  "INVALID_USERNAME",
	12:  "CAPTCHA_UNAUTHORIZED",
	13:  "CREATE_USER_FAILED",
	14:  "LOGIN_FAILED",
	15:  "OWNER_DOES_NOT_EXIST",
	16:  "CANNOT_DELETE_USER",
	17:  "TOKEN_INVALID",
	18:  "RESET_PASSWORD_FAILED",
	19:  "ASSIGN_ROLE_USER_FAILED",
	20:  "CANNOT_DELETE_ACCOUNT",
	21:  "NOT_FOUND_IN_FREEIPA",
	22:  "FOUND_IN_FREEIPA",
	41:  "DELETE_IN_PROGRESS",
	42:  "FACTORY_RESET_IN_PROGRESS",
	43:  "CREATE_IN_PROGRESS",
	44:  "PNMID_NOT_FOUND",
	45:  "HW_INACTIVE",
	70:  "AUTHENTICATION_FAILED_TO_NETWORK_DEVICE",
	71:  "ERROR_FROM_NETWORK_DEVICE",
	72:  "CONFIRMING_COMMIT_NOT_POSSIBLE",
	73:  "CANCEL_COMMIT_NOT_POSSIBLE",
	74:  "ERROR_ANOTHER_OPERATION_IS_IN_PROGRESS",
	75:  "OPERATION_IN_PROGRESS",
	76:  "ERROR_FAULTY_NETWORK_DEVICE_CONFIG_CANCELED",
	100: "OPERATION_TIMED_OUT",
	120: "LICENSE_EXPIRED",
	141: "MANUAL_CONFIG",
	161: "MCN_NOT_REACHABLE",
}

var DescriptionCode_value = map[string]int32{
	"NOT_SPECIFIED":                               0,
	"INVALID_ARGUMENT":                            1,
	"SERVICE_UNAVAILABLE":                         2,
	"ALREADY_EXIST":                               3,
	"NOT_FOUND":                                   4,
	"UNAUTHORIZED_ACCESS":                         5,
	"INVALID_OPERATION":                           6,
	"NOT_SUPPORTED":                               7,
	"INTERNAL_ERROR":                              8,
	"INVALID_USERNAME":                            10,
	"CAPTCHA_UNAUTHORIZED":                        12,
	"CREATE_USER_FAILED":                          13,
	"LOGIN_FAILED":                                14,
	"OWNER_DOES_NOT_EXIST":                        15,
	"CANNOT_DELETE_USER":                          16,
	"TOKEN_INVALID":                               17,
	"RESET_PASSWORD_FAILED":                       18,
	"ASSIGN_ROLE_USER_FAILED":                     19,
	"CANNOT_DELETE_ACCOUNT":                       20,
	"NOT_FOUND_IN_FREEIPA":                        21,
	"FOUND_IN_FREEIPA":                            22,
	"DELETE_IN_PROGRESS":                          41,
	"FACTORY_RESET_IN_PROGRESS":                   42,
	"CREATE_IN_PROGRESS":                          43,
	"PNMID_NOT_FOUND":                             44,
	"HW_INACTIVE":                                 45,
	"AUTHENTICATION_FAILED_TO_NETWORK_DEVICE":     70,
	"ERROR_FROM_NETWORK_DEVICE":                   71,
	"CONFIRMING_COMMIT_NOT_POSSIBLE":              72,
	"CANCEL_COMMIT_NOT_POSSIBLE":                  73,
	"ERROR_ANOTHER_OPERATION_IS_IN_PROGRESS":      74,
	"OPERATION_IN_PROGRESS":                       75,
	"ERROR_FAULTY_NETWORK_DEVICE_CONFIG_CANCELED": 76,
	"OPERATION_TIMED_OUT":                         100,
	"LICENSE_EXPIRED":                             120,
	"MANUAL_CONFIG":                               141,
	"MCN_NOT_REACHABLE":                           161,
}

func (x DescriptionCode) String() string {
	return proto.EnumName(DescriptionCode_name, int32(x))
}

func (DescriptionCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{1}
}

type Status struct {
	StatusCode           StatusCode         `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3,enum=releases.StatusCode" json:"status_code,omitempty"`
	StatusDescription    *StatusDescription `protobuf:"bytes,2,opt,name=status_description,json=statusDescription,proto3" json:"status_description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Status) Reset()         { *m = Status{} }
func (m *Status) String() string { return proto.CompactTextString(m) }
func (*Status) ProtoMessage()    {}
func (*Status) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{0}
}

func (m *Status) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Status.Unmarshal(m, b)
}
func (m *Status) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Status.Marshal(b, m, deterministic)
}
func (m *Status) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Status.Merge(m, src)
}
func (m *Status) XXX_Size() int {
	return xxx_messageInfo_Status.Size(m)
}
func (m *Status) XXX_DiscardUnknown() {
	xxx_messageInfo_Status.DiscardUnknown(m)
}

var xxx_messageInfo_Status proto.InternalMessageInfo

func (m *Status) GetStatusCode() StatusCode {
	if m != nil {
		return m.StatusCode
	}
	return StatusCode_UNSPECIFIED
}

func (m *Status) GetStatusDescription() *StatusDescription {
	if m != nil {
		return m.StatusDescription
	}
	return nil
}

type StatusDescription struct {
	DescriptionCode      DescriptionCode `protobuf:"varint,1,opt,name=description_code,json=descriptionCode,proto3,enum=releases.DescriptionCode" json:"description_code,omitempty"`
	Description          string          `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *StatusDescription) Reset()         { *m = StatusDescription{} }
func (m *StatusDescription) String() string { return proto.CompactTextString(m) }
func (*StatusDescription) ProtoMessage()    {}
func (*StatusDescription) Descriptor() ([]byte, []int) {
	return fileDescriptor_4feee897733d2100, []int{1}
}

func (m *StatusDescription) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StatusDescription.Unmarshal(m, b)
}
func (m *StatusDescription) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StatusDescription.Marshal(b, m, deterministic)
}
func (m *StatusDescription) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StatusDescription.Merge(m, src)
}
func (m *StatusDescription) XXX_Size() int {
	return xxx_messageInfo_StatusDescription.Size(m)
}
func (m *StatusDescription) XXX_DiscardUnknown() {
	xxx_messageInfo_StatusDescription.DiscardUnknown(m)
}

var xxx_messageInfo_StatusDescription proto.InternalMessageInfo

func (m *StatusDescription) GetDescriptionCode() DescriptionCode {
	if m != nil {
		return m.DescriptionCode
	}
	return DescriptionCode_NOT_SPECIFIED
}

func (m *StatusDescription) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterEnum("releases.StatusCode", StatusCode_name, StatusCode_value)
	proto.RegisterEnum("releases.DescriptionCode", DescriptionCode_name, DescriptionCode_value)
	proto.RegisterType((*Status)(nil), "releases.Status")
	proto.RegisterType((*StatusDescription)(nil), "releases.StatusDescription")
}

func init() { proto.RegisterFile("result.proto", fileDescriptor_4feee897733d2100) }

var fileDescriptor_4feee897733d2100 = []byte{
	// 747 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x94, 0x5d, 0x6e, 0x1b, 0x37,
	0x10, 0xc7, 0xbb, 0x4e, 0x6b, 0x27, 0x23, 0xdb, 0xa2, 0xc6, 0x1f, 0xb1, 0x1b, 0x34, 0x30, 0xfc,
	0xd0, 0xa6, 0x76, 0xab, 0x02, 0x29, 0x7a, 0x00, 0x86, 0x1c, 0x49, 0x8c, 0xb9, 0xe4, 0x82, 0xe4,
	0xda, 0x71, 0x5f, 0x08, 0xd5, 0xd2, 0x83, 0xd1, 0xc4, 0x1b, 0x78, 0x15, 0xa0, 0x40, 0x8f, 0x50,
	0xf4, 0x10, 0x3d, 0x4c, 0xef, 0x55, 0x70, 0x25, 0x59, 0x6b, 0xa5, 0x6f, 0x8b, 0xf9, 0xf8, 0xcf,
	0x6f, 0xfe, 0x1c, 0x09, 0xb6, 0xef, 0xa7, 0xf5, 0xa7, 0xf7, 0xb3, 0xfe, 0xc7, 0xfb, 0x6a, 0x56,
	0xe1, 0xd3, 0xfb, 0xe9, 0xfb, 0xe9, 0xb8, 0x9e, 0xd6, 0xa7, 0x7f, 0x65, 0xb0, 0xe9, 0x67, 0xe3,
	0xd9, 0xa7, 0x1a, 0x7f, 0x81, 0x4e, 0xdd, 0x7c, 0xc5, 0x9b, 0x6a, 0x32, 0x3d, 0xca, 0x4e, 0xb2,
	0x57, 0xbb, 0xaf, 0xf7, 0xfb, 0xcb, 0xd2, 0xfe, 0xbc, 0x4c, 0x54, 0x93, 0xa9, 0x83, 0xfa, 0xe1,
	0x1b, 0xdf, 0x02, 0x2e, 0xda, 0x26, 0xd3, 0xfa, 0xe6, 0xfe, 0xf6, 0xe3, 0xec, 0xb6, 0xba, 0x3b,
	0xda, 0x38, 0xc9, 0x5e, 0x75, 0x5e, 0xbf, 0x58, 0xef, 0x96, 0xab, 0x12, 0xd7, 0xab, 0xd7, 0x43,
	0xa7, 0x7f, 0x42, 0xef, 0xb3, 0x3a, 0x94, 0xc0, 0x5a, 0xca, 0x6d, 0xb8, 0xe3, 0x95, 0x7c, 0xab,
	0xa1, 0x21, 0xec, 0x4e, 0x1e, 0x07, 0xf0, 0x04, 0x3a, 0xeb, 0x7c, 0xcf, 0x5c, 0x3b, 0x74, 0xa6,
	0x01, 0x56, 0x2b, 0x62, 0x17, 0x3a, 0xa5, 0xf1, 0x05, 0x09, 0x35, 0x50, 0x24, 0xd9, 0x17, 0xd8,
	0x81, 0x2d, 0x5f, 0x0a, 0x41, 0xde, 0xb3, 0x0c, 0xf7, 0xa0, 0x5b, 0x70, 0x17, 0x14, 0xd7, 0x71,
	0x19, 0xdc, 0x48, 0x15, 0x03, 0xae, 0x74, 0xe9, 0x88, 0x3d, 0x39, 0xfb, 0x77, 0x0b, 0xba, 0x6b,
	0x50, 0xd8, 0x83, 0x1d, 0x63, 0x43, 0x6c, 0xab, 0xee, 0x03, 0x53, 0xe6, 0x92, 0x6b, 0x25, 0x23,
	0x77, 0xc3, 0x32, 0x27, 0x13, 0x58, 0x86, 0xcf, 0x61, 0xcf, 0x93, 0xbb, 0x54, 0x82, 0x62, 0x69,
	0xf8, 0x25, 0x57, 0x9a, 0xbf, 0xd1, 0xc4, 0x36, 0x92, 0x02, 0xd7, 0x8e, 0xb8, 0xbc, 0x8e, 0xf4,
	0x4e, 0xf9, 0xc0, 0x9e, 0xe0, 0x0e, 0x3c, 0x4b, 0xa2, 0x03, 0x5b, 0x1a, 0xc9, 0xbe, 0x4c, 0xad,
	0xa5, 0xe1, 0x65, 0x18, 0x59, 0xa7, 0x7e, 0x25, 0x19, 0xf9, 0x9c, 0xee, 0x2b, 0x3c, 0x80, 0xde,
	0x72, 0x92, 0x2d, 0xc8, 0xf1, 0xa0, 0xac, 0x61, 0x9b, 0x0f, 0x4c, 0x65, 0x51, 0x58, 0x17, 0x48,
	0xb2, 0x2d, 0x44, 0xd8, 0x55, 0x26, 0x90, 0x33, 0x5c, 0x47, 0x72, 0xce, 0x3a, 0xf6, 0xb4, 0xcd,
	0x59, 0xfa, 0x94, 0xca, 0x89, 0x01, 0x1e, 0xc1, 0xbe, 0xe0, 0x45, 0x10, 0x23, 0x1e, 0xdb, 0x43,
	0xd9, 0x36, 0x1e, 0x02, 0x0a, 0x47, 0x3c, 0x50, 0x53, 0x1e, 0x93, 0x2f, 0x24, 0xd9, 0x0e, 0x32,
	0xd8, 0xd6, 0x76, 0xa8, 0xcc, 0x32, 0xb2, 0x9b, 0x34, 0xec, 0x95, 0x21, 0x17, 0xa5, 0x25, 0x1f,
	0x13, 0xcb, 0x7c, 0xb3, 0x6e, 0xa3, 0xc1, 0x4d, 0x8a, 0x48, 0xd2, 0xb4, 0x90, 0x62, 0x2c, 0x21,
	0x07, 0x7b, 0x41, 0x26, 0x2e, 0x88, 0x58, 0x0f, 0x8f, 0xe1, 0xc0, 0x91, 0xa7, 0x10, 0x0b, 0xee,
	0xfd, 0x95, 0x75, 0x72, 0xa9, 0x8f, 0xf8, 0x02, 0x9e, 0x73, 0xef, 0xd5, 0xd0, 0x44, 0x67, 0xf5,
	0x63, 0x9c, 0xbd, 0xd4, 0xf7, 0x78, 0x04, 0x17, 0xc2, 0x96, 0x26, 0xb0, 0xfd, 0xc4, 0xf5, 0xe0,
	0x6b, 0x4c, 0xc0, 0x8e, 0x48, 0x15, 0x9c, 0x1d, 0x24, 0x2f, 0x3e, 0x8b, 0x1e, 0x26, 0xda, 0x85,
	0x86, 0x32, 0xb1, 0x70, 0x76, 0xe8, 0x92, 0xef, 0xdf, 0xe3, 0x37, 0x70, 0x3c, 0xe0, 0x22, 0x58,
	0x77, 0x1d, 0xe7, 0x88, 0xed, 0xf4, 0x59, 0xcb, 0xa8, 0x76, 0xfc, 0xbc, 0xb9, 0x30, 0x93, 0x2b,
	0x19, 0x57, 0x8f, 0xfb, 0x43, 0x3a, 0xca, 0xd1, 0x55, 0x54, 0x86, 0x8b, 0xa0, 0x2e, 0x89, 0xfd,
	0x88, 0xe7, 0xf0, 0x5d, 0xb2, 0x9d, 0x4c, 0x50, 0xa2, 0x79, 0xd1, 0xc5, 0x6a, 0x31, 0xd8, 0x68,
	0x28, 0x5c, 0x59, 0x77, 0x11, 0x25, 0xa5, 0x43, 0x62, 0x83, 0x44, 0xd2, 0x3c, 0x67, 0x1c, 0x38,
	0x9b, 0xaf, 0xa7, 0x87, 0x78, 0x0a, 0x2f, 0x85, 0x35, 0x03, 0xe5, 0x72, 0x65, 0x86, 0x51, 0xd8,
	0x3c, 0x57, 0xa1, 0x99, 0x5e, 0x58, 0xef, 0x55, 0xba, 0xbf, 0x11, 0xbe, 0x84, 0xaf, 0x05, 0x37,
	0x82, 0xf4, 0xff, 0xe6, 0x15, 0x9e, 0xc1, 0xb7, 0xf3, 0x11, 0xdc, 0xd8, 0x30, 0x22, 0xb7, 0x3a,
	0xb5, 0xa8, 0xfc, 0xa3, 0x0d, 0xdf, 0x26, 0xef, 0x5b, 0xd9, 0x56, 0xea, 0x02, 0x7f, 0x82, 0xf3,
	0x05, 0x29, 0x2f, 0x75, 0xb8, 0x5e, 0x63, 0x8d, 0x0d, 0xe6, 0x30, 0xce, 0x49, 0x48, 0x32, 0x9d,
	0xae, 0x7e, 0xa5, 0x15, 0x54, 0x4e, 0x32, 0xda, 0x32, 0xb0, 0x49, 0xb2, 0x51, 0x2b, 0x41, 0xc6,
	0x53, 0xa4, 0x77, 0x85, 0x72, 0x24, 0xd9, 0x1f, 0x88, 0xb0, 0x93, 0x73, 0x53, 0x72, 0xbd, 0x50,
	0x62, 0x7f, 0x67, 0x78, 0x08, 0xbd, 0x5c, 0x98, 0x66, 0x1f, 0x47, 0x5c, 0x8c, 0x9a, 0x1f, 0xdc,
	0x3f, 0xd9, 0x9b, 0x43, 0xc0, 0xc9, 0x78, 0x3c, 0xae, 0xfb, 0x77, 0xd5, 0xef, 0xb7, 0xe3, 0xfe,
	0x4d, 0xf5, 0xe1, 0x43, 0x75, 0x57, 0x64, 0xbf, 0x6d, 0x36, 0xff, 0xa4, 0x3f, 0xff, 0x17, 0x00,
	0x00, 0xff, 0xff, 0xd9, 0x36, 0x5c, 0x91, 0x59, 0x05, 0x00, 0x00,
}
